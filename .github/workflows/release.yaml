name: release
on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
permissions:
  contents: write
jobs:
  test:
    name: Unit tests with coverage
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: Build KCLVM
        run: make build
        shell: bash
      - name: Grammar test
        run: |
          chmod +x ./internal/scripts/test_grammar.sh
          ./internal/scripts/test_grammar.sh
        shell: bash
      - name: Delete rust cargo
        run: rm -rf /root/.cargo/bin
        shell: bash
      - name: Install rust nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.62
          override: true
          components: clippy, rustfmt
      - name: Rust code format check
        working-directory: ./kclvm
        run: cargo fmt --check
        shell: bash
      - name: Rust grammar test
        working-directory: ./kclvm
        run: export PATH=$PATH:$PWD/../_build/dist/ubuntu/kclvm/bin && make install-rustc-wasm && make && make test-grammar
        shell: bash
      - name: Rust runtime test
        working-directory: ./kclvm
        run: export PATH=$PATH:$PWD/../_build/dist/ubuntu/kclvm/bin && make install-rustc-wasm && make && make test-runtime
        shell: bash
      - name: Rust unit test
        working-directory: ./kclvm
        run: export PATH=$PATH:$PWD/../_build/dist/ubuntu/kclvm/bin && make install-rustc-wasm && make && make codecov-lcov
        shell: bash
      - name: Copy dockerfile
        run: cp scripts/docker/kclvm/Dockerfile .
        shell: bash
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: kusionstack/kclvm
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
